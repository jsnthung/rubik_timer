{"ast":null,"code":"var _jsxFileName = \"/Users/jasonthung/rubik_timer/frontend/src/components/Scramble.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCRAMBLE_LENGTH = 20;\nconst Scramble = () => {\n  _s();\n  // TODO: Create scramble algorithm\n\n  const generateScrambleLength = () => {\n    return Math.floor(Math.random * (20 - 16 + 1) + 16);\n  };\n  const generateScrambleSequence = () => {\n    const faces = ['R', 'L', 'F', 'B', 'U', 'D'];\n    const directions = ['', \"'\", '2'];\n    let sequence = [];\n    let prev_face = \"\";\n    while (sequence.length < SCRAMBLE_LENGTH) {\n      let turn_face = faces[Math.floor(Math.random() * 6)];\n      while (turn_face === prev_face) {\n        turn_face = faces[Math.floor(Math.random() * 6)];\n      }\n      let turn_direction = directions[Math.floor(Math.random() * 3)];\n      let turn = turn_face + turn_direction;\n      sequence.push(turn);\n      prev_face = turn_face;\n    }\n    return sequence.join(' ');\n  };\n  const [scramble, setScramble] = useState(generateScrambleSequence);\n  const generateNewScramble = () => {\n    setScramble(generateScrambleSequence);\n  };\n  const [scrambleLength, setScrambleLength] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: scramble\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateNewScramble,\n      children: \"New scramble\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: scrambleLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setScrambleLength(generateScrambleLength),\n      children: \"New length\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Scramble, \"0GUbjNypsMKdciLjwDhMmUXkb7E=\");\n_c = Scramble;\nexport default Scramble;\nvar _c;\n$RefreshReg$(_c, \"Scramble\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SCRAMBLE_LENGTH","Scramble","_s","generateScrambleLength","Math","floor","random","generateScrambleSequence","faces","directions","sequence","prev_face","length","turn_face","turn_direction","turn","push","join","scramble","setScramble","generateNewScramble","scrambleLength","setScrambleLength","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jasonthung/rubik_timer/frontend/src/components/Scramble.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\n\nconst SCRAMBLE_LENGTH = 20\n\nconst Scramble = () => {\n    // TODO: Create scramble algorithm\n\n    const generateScrambleLength = () => {\n        return Math.floor(Math.random * (20 - 16 + 1) + 16)\n    }\n\n    const generateScrambleSequence = () => {\n        const faces = ['R', 'L', 'F', 'B', 'U', 'D']\n        const directions = ['', \"'\", '2']\n\n        let sequence = []\n        let prev_face = \"\"\n\n        while (sequence.length < SCRAMBLE_LENGTH) {\n            let turn_face = faces[Math.floor(Math.random() * 6)]\n            while (turn_face === prev_face) {\n                turn_face = faces[Math.floor(Math.random() * 6)]\n            }\n\n            let turn_direction = directions[Math.floor(Math.random() * 3)]\n            let turn = turn_face + turn_direction\n\n            sequence.push(turn)\n\n            prev_face = turn_face\n        }\n\n        return sequence.join(' ')\n    }\n\n    const [scramble, setScramble] = useState(generateScrambleSequence)\n\n    const generateNewScramble = () => {\n        setScramble(generateScrambleSequence)\n    }\n\n    const [scrambleLength, setScrambleLength] = useState(0)\n\n    return (\n        <div>\n            <p>{scramble}</p>\n            <button onClick={generateNewScramble}>New scramble</button>\n            <p>{scrambleLength}</p>\n            <button onClick={setScrambleLength(generateScrambleLength)}>New length</button>\n        </div>\n    )\n}\n\nexport default Scramble"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;;EAEA,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACjC,OAAOC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;EACvD,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;IACnC,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAC5C,MAAMC,UAAU,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IAEjC,IAAIC,QAAQ,GAAG,EAAE;IACjB,IAAIC,SAAS,GAAG,EAAE;IAElB,OAAOD,QAAQ,CAACE,MAAM,GAAGZ,eAAe,EAAE;MACtC,IAAIa,SAAS,GAAGL,KAAK,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACpD,OAAOO,SAAS,KAAKF,SAAS,EAAE;QAC5BE,SAAS,GAAGL,KAAK,CAACJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MACpD;MAEA,IAAIQ,cAAc,GAAGL,UAAU,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;MAC9D,IAAIS,IAAI,GAAGF,SAAS,GAAGC,cAAc;MAErCJ,QAAQ,CAACM,IAAI,CAACD,IAAI,CAAC;MAEnBJ,SAAS,GAAGE,SAAS;IACzB;IAEA,OAAOH,QAAQ,CAACO,IAAI,CAAC,GAAG,CAAC;EAC7B,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAACW,wBAAwB,CAAC;EAElE,MAAMa,mBAAmB,GAAGA,CAAA,KAAM;IAC9BD,WAAW,CAACZ,wBAAwB,CAAC;EACzC,CAAC;EAED,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAEvD,oBACIG,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAIL;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB5B,OAAA;MAAQ6B,OAAO,EAAER,mBAAoB;MAAAG,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3D5B,OAAA;MAAAwB,QAAA,EAAIF;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB5B,OAAA;MAAQ6B,OAAO,EAAEN,iBAAiB,CAACnB,sBAAsB,CAAE;MAAAoB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9E,CAAC;AAEd,CAAC;AAAAzB,EAAA,CA/CKD,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAiDd,eAAeA,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}