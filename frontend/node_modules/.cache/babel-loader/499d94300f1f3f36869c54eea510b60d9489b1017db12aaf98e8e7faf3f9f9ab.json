{"ast":null,"code":"var _jsxFileName = \"/Users/jasonthung/rubik_timer/frontend/src/components/Scramble.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateScrambleSequence = () => {\n  const faces = ['R', 'L', 'F', 'B', 'U', 'D'];\n  const directions = ['', \"'\", '2'];\n  const scrambleLength = Math.floor(Math.random() * 5) + 16;\n  let sequence = [];\n  let prev_face = \"\";\n  while (sequence.length < scrambleLength) {\n    let turn_face = faces[Math.floor(Math.random() * 6)];\n    while (turn_face === prev_face) {\n      turn_face = faces[Math.floor(Math.random() * 6)];\n    }\n    let turn_direction = directions[Math.floor(Math.random() * 3)];\n    let turn = turn_face + turn_direction;\n    sequence.push(turn);\n    prev_face = turn_face;\n  }\n  return sequence.join(' ');\n};\nexport const generateNewScramble = setScramble => {\n  setScramble(generateScrambleSequence);\n};\nconst Scramble = () => {\n  _s();\n  const [scramble, setScramble] = useState(generateScrambleSequence);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: scramble\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        generateNewScramble(setScramble);\n      },\n      children: \"New scramble\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Scramble, \"oi5OU7eLk6L9WfqLrA77dcFL+C0=\");\n_c = Scramble;\nexport default Scramble;\nvar _c;\n$RefreshReg$(_c, \"Scramble\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","generateScrambleSequence","faces","directions","scrambleLength","Math","floor","random","sequence","prev_face","length","turn_face","turn_direction","turn","push","join","generateNewScramble","setScramble","Scramble","_s","scramble","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/jasonthung/rubik_timer/frontend/src/components/Scramble.js"],"sourcesContent":["import React, { useState } from 'react'\n\nconst generateScrambleSequence = () => {\n    const faces = ['R', 'L', 'F', 'B', 'U', 'D']\n    const directions = ['', \"'\", '2']\n\n    const scrambleLength = Math.floor(Math.random() * 5) + 16\n\n    let sequence = []\n    let prev_face = \"\"\n\n    while (sequence.length < scrambleLength) {\n        let turn_face = faces[Math.floor(Math.random() * 6)]\n        while (turn_face === prev_face) {\n            turn_face = faces[Math.floor(Math.random() * 6)]\n        }\n\n        let turn_direction = directions[Math.floor(Math.random() * 3)]\n        let turn = turn_face + turn_direction\n\n        sequence.push(turn)\n\n        prev_face = turn_face\n    }\n\n    return sequence.join(' ')\n}\n\nexport const generateNewScramble = (setScramble) => {\n    setScramble(generateScrambleSequence)\n}\n\nconst Scramble = () => {\n    const [scramble, setScramble] = useState(generateScrambleSequence)\n\n    return (\n        <div>\n            <p>{scramble}</p>\n            <button onClick={() => {\n                generateNewScramble(setScramble)\n            }}>New scramble</button>\n        </div>\n    )\n}\n\nexport default Scramble"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EACnC,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAC5C,MAAMC,UAAU,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;EAEjC,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;EAEzD,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,SAAS,GAAG,EAAE;EAElB,OAAOD,QAAQ,CAACE,MAAM,GAAGN,cAAc,EAAE;IACrC,IAAIO,SAAS,GAAGT,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD,OAAOI,SAAS,KAAKF,SAAS,EAAE;MAC5BE,SAAS,GAAGT,KAAK,CAACG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACpD;IAEA,IAAIK,cAAc,GAAGT,UAAU,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9D,IAAIM,IAAI,GAAGF,SAAS,GAAGC,cAAc;IAErCJ,QAAQ,CAACM,IAAI,CAACD,IAAI,CAAC;IAEnBJ,SAAS,GAAGE,SAAS;EACzB;EAEA,OAAOH,QAAQ,CAACO,IAAI,CAAC,GAAG,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,WAAW,IAAK;EAChDA,WAAW,CAAChB,wBAAwB,CAAC;AACzC,CAAC;AAED,MAAMiB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEH,WAAW,CAAC,GAAGnB,QAAQ,CAACG,wBAAwB,CAAC;EAElE,oBACID,OAAA;IAAAqB,QAAA,gBACIrB,OAAA;MAAAqB,QAAA,EAAID;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBzB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAM;QACnBV,mBAAmB,CAACC,WAAW,CAAC;MACpC,CAAE;MAAAI,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEd,CAAC;AAAAN,EAAA,CAXKD,QAAQ;AAAAS,EAAA,GAART,QAAQ;AAad,eAAeA,QAAQ;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}